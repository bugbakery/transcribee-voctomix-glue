[project]
name = "transcribee-voctoweb"
version = "0.1.0"
description = "Glue between transcribee and voctoweb (media.ccc.de)"
authors = [
    { name = "phlmn", email = "info@philipp-mandler.com" },
]

dependencies = [
    "fastapi>=0.92.0",
    "uvicorn[standard]>=0.20.0",
    "python-multipart>=0.0.6",
    "filetype>=1.2.0",
    "python-magic>=0.4.27",
    "pydantic-settings>=2.1.0",
    "jinja2>=3.1.2",
    "requests>=2.31.0",
    "pydantic>=2.5.2",
    "webvtt-py>=0.4.6",
    "httpx>=0.27.2",
]
requires-python = ">=3.11"
readme = "./README.md"
license = { text = "AGPL-3.0" }

[tool.pdm.dev-dependencies]
dev = [
    "pyyaml>=6.0",
    "pytest>=7.3.1",
    "httpx>=0.24.0",
    "pytest-alembic>=0.10.4",
    "pyright>=1.1.314",
    "datamodel-code-generator[http]>=0.25.2",
]

[tool.datamodel-codegen]
output-model-type = "pydantic_v2.BaseModel"
input-file-type = "openapi"


[tool.pdm.scripts]
start = "uvicorn transcribee_voctoweb.main:app --workers 1"
dev = "uvicorn transcribee_voctoweb.main:app --workers 1 --port 8001 --reload"
test = "pytest tests/"
transcribee_openapi = "datamodel-codegen  --input transcribee-openapi.yaml --output transcribee_voctoweb/transcribee_api/model.py"
voc_openapi = "datamodel-codegen  --url https://publishing.c3voc.de/openapi.json --output transcribee_voctoweb/voc_api/model.py"
format = "black transcribee_voctoweb/"

[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"
